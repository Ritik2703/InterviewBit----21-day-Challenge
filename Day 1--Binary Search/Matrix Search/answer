#hint--

If you write down the numbers of row 1 followed by numbers in row2, row3 and so on, do you think the resulting array would be sorted ?
If yes, how do you search for a number efficiently in a sorted array ?

#Solution--

int Solution::searchMatrix(vector<vector<int> > &A, int B) {
     int m=A.size();
   int n=A[0].size();
   int l=0,r=m-1,mid;
   if(B<A[0][0]||B>A[m-1][n-1]) return 0;
   while(l<=r){
    mid=l+(r-l)/2;
    if(B==A[mid][0]) return 1;
    else if(B>A[mid][0]) l=mid+1;
    else 
      r=mid-1;
   }
   l=0;
   int searchrow=r;
   r=n-1;
   while(l<=r){
       mid=l+(r-l)/2;
       if(A[searchrow][mid]==B) return 1;
       else if(A[searchrow][mid]<B) l=mid+1;
       else 
         r=mid-1;   
   }
   return 0;
}

